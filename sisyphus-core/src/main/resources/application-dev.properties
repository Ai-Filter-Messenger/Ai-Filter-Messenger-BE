spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.datasource.url=jdbc:h2:tcp://localhost:55877/~/test
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=1234

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=create-drop

#logging level
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql=trace
logging.level.org.springframework.jdbc=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.security=DEBUG

#Redis setting
spring.data.redis.host=localhost
spring.data.redis.port=6379

spring.jwt.access.token=10000000
spring.jwt.refresh.token=86400000

#file storage root
file.storage.path=/Users/imc/Ai-Filter-Messenger-BE/sisyphus-core/src/main/resources/static/files

spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8080/login/oauth2/code/naver
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8080/login/oauth2/code/kakao
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google

spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=email, profile

#S3 setting
aws.cloud.s3.bucket=ai-messenger-app
aws.cloud.stack.auto=false
aws.cloud.region.static=ap-northeast-2
aws.cloud.credentials.access-key=${CLOUD_AWS_CREDENTIALS_ACCESS_KEY}
aws.cloud.credentials.secret-key=${CLOUD_AWS_CREDENTIALS_SECRET_KEY}
